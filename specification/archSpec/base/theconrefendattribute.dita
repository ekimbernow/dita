<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="theconrefendattribute" xml:lang="en-us">
  <title>The <xmlatt>conrefend</xmlatt> attribute</title>
  <shortdesc>The <xmlatt>conrefend</xmlatt> attribute is used when referencing a range of elements
    with the conref mechanism. The <xmlatt>conref</xmlatt> or <xmlatt>conkeyref</xmlatt> attribute
    references the first element in the range, while <xmlatt>conrefend</xmlatt> references the last
    element in the range. </shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>conref attributes<indexterm><xmlatt>conrefend</xmlatt></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <refbody>
    <section id="section-1"><title>Using <xmlatt>conref</xmlatt> together with
          <xmlatt>conrefend</xmlatt></title>
      <p>The following markup rules apply when using or implementing <xmlatt>conrefend</xmlatt>:<ul>
          <li>The start and end elements of a range <term outputclass="RFC-2119">MUST</term> be of
            the same type as the referencing element or generalizable to the referencing
            element.<!-- For example, <xmlatt>conref</xmlatt> and <xmlatt>conrefend</xmlatt> attributes on an <xmlelement>li</xmlelement> element might reference other <xmlelement>li</xmlelement> elements, or they might reference specializations of <xmlelement>li</xmlelement> such as <xmlelement>step</xmlelement>.--></li>
          <li>The start and end elements in a range <term outputclass="RFC-2119">MUST</term> share
            the same parent, and the start element <term outputclass="RFC-2119">MUST</term> precede
            the end element in document order.</li>
          <li>The parent of the referencing element <term outputclass="RFC-2119">MUST</term> be the
            same as the parent of the referenced range or generalizable to the parent of the
            referencing element.
            <!--For example, it is possible to pull a range from <xmlelement>conbody</xmlelement> into <xmlelement>body</xmlelement>, because <xmlelement>conbody</xmlelement> is generalizable to <xmlelement>body</xmlelement>. It is not possible to pull a range from <xmlelement>body</xmlelement> into <xmlelement>conbody</xmlelement>, because the result <ph>might</ph> not be valid in <xmlelement>conbody</xmlelement>.--></li>
        </ul></p><p>In addition, several other items must be taken into account:</p><ul>
        <li>Processors will resolve the range by pulling in the starting referenced element and
          following sibling XML nodes across to and including the ending referenced element.</li>
        <li>As with <xmlatt>conref</xmlatt>, if the <xmlatt>conrefend</xmlatt> references a more
          specialized version of the referencing element, applications should generalize the target
          when resolving.</li>
        <li>As with <xmlatt>conref</xmlatt>, it is not valid to use <xmlatt>conrefend</xmlatt> to
          reference a more general version of an element (such as using
            <xmlelement>step</xmlelement> to reference an <xmlelement>li</xmlelement> element).</li>
        <li>Other nodes (such as elements or text) between the start and end of a range do not have
          to match the referencing element.</li>
        <li>With single conref, an <xmlatt>id</xmlatt> attribute from the referenced element will
          not be preserved on the resolved content. With a range, an <xmlatt>id</xmlatt> on both the
          start and the end elements will not be preserved. <xmlatt>id</xmlatt> attributes on
          intermediate or child nodes should be preserved; if this results in duplicate
            <xmlatt>id</xmlatt> values, an application can recover by changing the
            <xmlatt>id</xmlatt>, warning the user, or implementing another strategy.</li>
        <li>With a single conref, attributes specified on the referencing element can be used to
          override attributes on the referenced element. With a conref range, the same is true, with
          the following clarifications: <ul>
            <li>When an <xmlatt>id</xmlatt> attribute is specified on the referencing element, it
              will only be preserved on the first element of the resolved range.</li>
            <li>When other attributes are specified, they will only apply to referenced elements of
              the same type. For example, if <xmlelement>step</xmlelement> is used to pull in a
              range of sequential <xmlelement>step</xmlelement> elements, locally specified
              attributes apply to all steps in the range. If <xmlelement>ol</xmlelement> is used to
              pull in a series of (<xmlelement>ol</xmlelement>, <xmlelement>p</xmlelement>,
                <xmlelement>ol</xmlelement>), locally specified attributes apply only to the
                <xmlelement>ol</xmlelement> elements in that range.</li>
          </ul></li>
      </ul></section>
    <section id="conkeyref">
      <title>Using <xmlatt>conrefend</xmlatt> together with <xmlatt>conkeyref</xmlatt></title>
      <p>When the <xmlatt>conkeyref</xmlatt> attribute is used in place of <xmlatt>conref</xmlatt>,
        a key is used to address the target of the reference. The <xmlatt>conrefend</xmlatt>
        attribute, which indicates the end of a <xmlatt>conref</xmlatt> range, cannot use a key.
        Instead the map or topic element addressed by the key name component of the
          <xmlatt>conkeyref</xmlatt> is used in place of whatever map or topic element is addressed
        by the <xmlatt>conrefend</xmlatt> attribute.</p>
      <p>For example, if the value of the <xmlatt>conkeyref</xmlatt> attribute is
          <keyword>config/step1</keyword> and the value of the <xmlatt>conrefend</xmlatt> is
          <keyword>defaultconfig.dita#config/laststep</keyword>, the conref range will end with the
        step that has <codeph>id="laststep"</codeph> in whatever topic is addressed by the key name
          <keyword>config</keyword>. If the key name <keyword>config</keyword> is not defined, and
        the <xmlatt>conref</xmlatt> attribute itself is not present for fallback, the
          <xmlatt>conrefend</xmlatt> attribute is ignored.</p>
    </section>
  </refbody>
</reference>
